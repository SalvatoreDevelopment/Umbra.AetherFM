name: build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build:
    runs-on: windows-latest
    env:
      SOLUTION_NAME: Umbra.AetherFM.sln
      RELEASE_DIR: Umbra.AetherFM/out/Release
      RELEASE_NAME: Umbra.AetherFM
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      
      - name: Download Umbra DLLs
        shell: pwsh
        run: |
          try {
            # Create lib directory
            if (!(Test-Path "lib")) {
              New-Item -ItemType Directory -Path "lib" -Force
            }
            
            Write-Host "Downloading latest Umbra release..."
            
            # Get latest Umbra release
            $response = Invoke-RestMethod -Uri "https://api.github.com/repos/una-xiv/Umbra/releases/latest"
            $latestUmbra = $response.tag_name
            Write-Host "Latest Umbra version: $latestUmbra"
            
            # Download Umbra
            $umbraUrl = "https://github.com/una-xiv/Umbra/releases/download/$latestUmbra/Umbra-$latestUmbra.zip"
            Write-Host "Downloading from: $umbraUrl"
            
            Invoke-WebRequest -Uri $umbraUrl -OutFile "umbra.zip" -UseBasicParsing
            Write-Host "Download completed"
            
            # Extract
            Write-Host "Extracting..."
            Expand-Archive -Path "umbra.zip" -DestinationPath "umbra_temp" -Force
            
            # Copy required DLLs
            Write-Host "Copying DLLs..."
            Copy-Item "umbra_temp\Umbra.dll" "lib\" -ErrorAction Stop
            Copy-Item "umbra_temp\Umbra.Common.dll" "lib\" -ErrorAction Stop
            Copy-Item "umbra_temp\Una.Drawing.dll" "lib\" -ErrorAction Stop
            
            # Cleanup
            Remove-Item "umbra.zip" -Force
            Remove-Item "umbra_temp" -Recurse -Force
            
            # List what we have
            Write-Host "Files in lib directory:"
            Get-ChildItem "lib\" | ForEach-Object { Write-Host "  $($_.Name)" }
            
          } catch {
            Write-Error "Error downloading Umbra DLLs: $($_.Exception.Message)"
            Write-Host "Stack trace: $($_.ScriptStackTrace)"
            exit 1
          }
      
      - name: Restore
        run: dotnet restore ${{ env.SOLUTION_NAME }}
      - name: Build Release
        run: dotnet build ${{ env.SOLUTION_NAME }} -c Release --no-restore
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RELEASE_NAME }}
          path: ${{ env.RELEASE_DIR }}/*


