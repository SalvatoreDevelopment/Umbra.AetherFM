name: build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build:
    runs-on: windows-latest
    env:
      SOLUTION_NAME: Umbra.AetherFM.sln
      RELEASE_DIR: Umbra.AetherFM/out/Release
      RELEASE_NAME: Umbra.AetherFM
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      
      - name: Download Umbra DLLs
        run: |
          # Create lib directory
          mkdir -p lib
          
          # Download latest Umbra release
          $latestUmbra = (Invoke-RestMethod -Uri "https://api.github.com/repos/una-xiv/Umbra/releases/latest").tag_name
          Write-Host "Downloading Umbra $latestUmbra"
          
          # Download and extract Umbra
          $umbraUrl = "https://github.com/una-xiv/Umbra/releases/download/$latestUmbra/Umbra-$latestUmbra.zip"
          Invoke-WebRequest -Uri $umbraUrl -OutFile "umbra.zip"
          Expand-Archive -Path "umbra.zip" -DestinationPath "umbra_temp" -Force
          
          # Copy required DLLs
          Copy-Item "umbra_temp\Umbra.dll" "lib\"
          Copy-Item "umbra_temp\Umbra.Common.dll" "lib\"
          Copy-Item "umbra_temp\Una.Drawing.dll" "lib\"
          
          # Cleanup
          Remove-Item "umbra.zip"
          Remove-Item "umbra_temp" -Recurse -Force
          
          # List what we have
          Get-ChildItem "lib\"
      
      - name: Restore
        run: dotnet restore ${{ env.SOLUTION_NAME }}
      - name: Build Release
        run: dotnet build ${{ env.SOLUTION_NAME }} -c Release --no-restore
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RELEASE_NAME }}
          path: ${{ env.RELEASE_DIR }}/*


